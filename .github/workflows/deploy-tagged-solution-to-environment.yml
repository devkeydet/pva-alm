name: deploy-tagged-solution-to-environment

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: "GitHub tag for solution-version to deploy"
      environment:
        required: true
        description: "GitHub environment name to deploy to"
        default: prod
jobs:
  deploy-solution-import-data-turn-on-flows:
    # Using Windows in this case because splitting across jobs targetting the same
    # GitHub Environment causes an approval for each job.  The turn-on-flows-impersonation
    # action uses PowerShell cmdlets that still require Windows.
    runs-on: windows-2022
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v2

      - id: setOutput
        name: get-solution-name-from-tag
        shell: pwsh
        run: |
          $tag = "${{ github.event.inputs.tag }}"
          $splitArray = $tag -split "-"
          $solutionName = $splitArray[0]
          echo "solution_name=$solutionName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

      - name: deploy-solution
        uses: ./.github/actions/deploy-solution
        with:
          environment_url: ${{ secrets.ENVIRONMENT_URL }}
          solution_name: ${{ env.solution_name }}
          environment: ${{ github.event.inputs.environment }}
          tag: ${{ github.event.inputs.tag }}
          secrets: ${{ toJSON(secrets) }}

      - id: import-configuration-migration-data-if-exists
        name: import-configuration-migration-data-if-exists
        uses: ./.github/actions/import-configuration-migration-data-if-exists
        with:
          environment_url: ${{ secrets.ENVIRONMENT_URL }}
          solution_name: ${{ env.solution_name }}
          tenant_id: ${{ secrets.TENANT_ID }}
          app_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          environment: ${{ github.event.inputs.environment }}

      - name: turn-on-flows-impersonation
        id: turn-on-flows-impersonation
        uses: ./.github/actions/turn-on-flows-impersonation
        with:
          environment_url: ${{ secrets.ENVIRONMENT_URL }}
          solution_name: ${{ env.solution_name }}
          tenant_id: ${{ secrets.TENANT_ID }}
          app_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          secrets: ${{ toJSON(secrets) }}

  #TODO: Create a release in GitHub
