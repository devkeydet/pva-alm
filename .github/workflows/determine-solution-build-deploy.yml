name: determine-solution-build-deploy

on:
  pull_request:
    branches:
      - main
    paths:
      - src/**
      - '!src/*/build-deploy-trigger.txt'
  push:
    branches:
      - main
    paths:
      - src/**
      - '!src/*/build-deploy-trigger.txt'

env:
  solution_version_major_minor: "1.0"

jobs:
  determine-solution-build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: update-pr-with-check-comment
        if: contains(github.ref, 'pull')
        uses: peter-evans/create-or-update-comment@v1.4.5
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            PR NOT READY FOR APPROVAL
            - Wait for another comment to appear after this one.
            - The workflow triggered by this PR starts another workflow that represents the actual PR validation workflow.        
      - uses: actions/checkout@v2
      # determine if the build should go to the PR or UAT environment
      - name: uat env var
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: |
          echo "environment=uat" >> $GITHUB_ENV
      - name: pr env var
        if: github.ref != 'refs/heads/main'
        shell: bash
        run: |
          echo "environment=pr" >> $GITHUB_ENV
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v11.6
      # check for file changes in solution source folder(s)
      # if found, queue build and deply workflow
      - shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_DISPATCH_TOKEN }}
          files: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} #TODO: get working with GITHUB_TOKEN
        run: |
          echo "changed-files: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}"
          echo "files: $env:files"
          $files = "${{ steps.changed-files.outputs.all_changed_and_modified_files }}"
          $filesArray = $files -split '\n'

          $solutionDirectoriesArray = [System.Collections.ArrayList]::new()

          foreach ($file in $filesArray) {     
            echo "file: $file"    
            if ($file.StartsWith("src/") -And $file.Contains("SolutionPackage")) {
              $solutionDirectory = "{0}/{1}/{2}" -f $file.Split('/')
              $solutionDirectoriesArray.Add($solutionDirectory)
              echo "solutionDirectory: $solutionDirectory"
            }        
          }

          $uniqueSolutionDirectories = $solutionDirectoriesArray | Sort-Object | Get-Unique

          foreach ($dir in $uniqueSolutionDirectories) {            
            $solutionName = $dir.Replace("src/","").Replace("/SolutionPackage","")
            echo "solutionName: $solutionName"

            $ref = "${{ github.ref }}"

            #gh workflow run build-deploy-solution -f ref=$ref -f solution_name=$solutionName -f solution_version_major_minor=${{ env.solution_version_major_minor }} -f environment=${{ env.environment }}
            
            # New-Item "./src/$solutionName/build-deploy-trigger.txt" -ItemType File -Value $env:GITHUB_RUN_ID -Force

            # git config --global user.name ${{ github.actor }}   
            # git add --all
            # git commit -am "trigger build-deploy-solution"
            # git push
            
            echo "pipeline queued for $solutionName"
            echo $ref
          }
