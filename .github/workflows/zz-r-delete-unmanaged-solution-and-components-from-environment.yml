name: zz-r-delete-unmanaged-solution-and-components-from-environment

on:
  workflow_call:
    inputs:
      solution_name:
        type: string
        required: true
      environment_url:
        type: string
        required: true

jobs:
  export-and-delete-unmanaged-import-and-delete-managed:
    runs-on: ubuntu-latest

    env:
      solution_export_folder: solution-export-temp 

    steps:
      # Solutions cannot be imported in parallel, so we queue
      - uses: ahmadnassri/action-workflow-queue@v1

      - uses: actions/checkout@v2

      # We export the unmamanaged solution because you may need to manually import it again if this pipeline fails
      # after it is deleted from the environment
      - name: export-unmanaged-solution
        uses: microsoft/powerplatform-actions/export-solution@v0
        with:
          environment-url: ${{ github.event.inputs.environment_url}}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ runner.temp }}/${{ github.event.inputs.solution_name }}/${{ github.event.inputs.solution_name }}.zip
          managed: false

      - name: export-managed-solution
        uses: microsoft/powerplatform-actions/export-solution@v0
        with:
          environment-url: ${{ github.event.inputs.environment_url}}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ runner.temp }}/${{ github.event.inputs.solution_name }}/${{ github.event.inputs.solution_name }}_managed.zip
          managed: true
      
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: ${{ runner.temp }}/${{ github.event.inputs.solution_name }}
      
      # need to drop to pac because there's a bug in delete-solution
      # https://github.com/microsoft/powerplatform-actions/issues/141
      # TODO: use delete-solution whe bug is fixed
      - name: get-pac-path
        id: get-pac-path
        uses: ./.github/actions/get-pac-path

      - name: delete-unmanaged-solution (DOES NOT DELETE SOLUTION COMPONENTS)
        shell: pwsh
        run: |
          $env:PATH = $env:PATH + ":${{ steps.get-pac-path.outputs.path }}"
          pac auth create --name temp --url ${{ github.event.inputs.environment_url}} --tenant ${{ secrets.TENANT_ID }} --applicationId ${{ secrets.CLIENT_ID }} --clientSecret ${{ secrets.CLIENT_SECRET }}
          pac solution delete --solution-name ${{ github.event.inputs.solution_name }}
          
      # - name: delete-unmanaged-solution (DOES NOT DELETE SOLUTION COMPONENTS)
      #   uses: microsoft/powerplatform-actions/delete-solution@main #using @main for now because delete-solution isn't officially released, therefore won't be in v0
      #   with:
      #     environment-url: ${{ github.event.inputs.environment_url}}
      #     app-id: ${{ secrets.CLIENT_ID }}
      #     client-secret: ${{ secrets.CLIENT_SECRET }}
      #     tenant-id: ${{ secrets.TENANT_ID }}
      #     solution-name: ${{ github.event.inputs.solution_name }}

      - name: import-manage-solution-to-environment
        shell: pwsh
        run: |
          echo $env:PATH
          $env:PATH = $env:PATH + ":${{ steps.get-pac-path.outputs.path }}"
          echo $env:PATH
          pac auth create --name temp --url ${{ github.event.inputs.environment_url}} --tenant ${{ secrets.TENANT_ID }} --applicationId ${{ secrets.CLIENT_ID }} --clientSecret ${{ secrets.CLIENT_SECRET }}
          pac solution import --force-overwrite true --convert-to-managed true --path "${{ runner.temp }}/${{ github.event.inputs.solution_name }}/${{ github.event.inputs.solution_name }}_managed.zip"
      
      # - name: import-manage-solution-to-environment
      #   uses: microsoft/powerplatform-actions/import-solution@main #using @main for now because convert-to-managed isn't officially released, therefore won't be in v0
      #   with:
      #     environment-url: ${{ github.event.inputs.environment_url}}
      #     tenant-id: ${{ secrets.tenant_id }}
      #     app-id: ${{ secrets.client_id }}
      #     client-secret: ${{ secrets.client_secret }}
      #     solution-file: ${{ runner.temp }}/${{ github.event.inputs.solution_name }}/${{ github.event.inputs.solution_name }}_managed.zip
      #     force-overwrite: true
      #     convert-to-managed: true

      - if: ${{ failure() }}
        name: log-error
        shell: pwsh
        run: |
          $errorMessage = "Since the import failed, your environment is in an unhealthy state. "
          $errorMessage = $errorMessage + "The unmanaged container is gone, but the unmanaged solution components still exist in the environment. "
          $errorMessage = $errorMessage + "Fix whatever is causing the import to fail, then you can rerun this job."
          $errorMessage = $errorMessage + "You can download the unmanaged solution as an artifact from this build to get the environment back into the state "
          $errorMessage = $errorMessage + "it was in before you deleted the unmanaged solution."
          echo "::error title=Error::$errorMessage"

      - name: delete-managed-solution
        shell: pwsh
        run: |
          $env:PATH = $env:PATH + ":${{ steps.get-pac-path.outputs.path }}"
          pac auth create --name temp --url ${{ github.event.inputs.environment_url}} --tenant ${{ secrets.TENANT_ID }} --applicationId ${{ secrets.CLIENT_ID }} --clientSecret ${{ secrets.CLIENT_SECRET }}
          pac solution delete --solution-name ${{ github.event.inputs.solution_name }}

    #   - name: delete-managed-solution
    #     uses: microsoft/powerplatform-actions/delete-solution@main #using @main for now because delete-solution isn't officially released, therefore won't be in v0
    #     with:
    #       environment-url: ${{ github.event.inputs.environment_url}}
    #       app-id: ${{ secrets.CLIENT_ID }}
    #       client-secret: ${{ secrets.CLIENT_SECRET }}
    #       tenant-id: ${{ secrets.TENANT_ID }}
    #       solution-name: ${{ github.event.inputs.solution_name }}
